openapi: 3.0.0
info:
  title: Sriflix API
  description: REST API for Sriflix Web App
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Local
  - url: https://sriflix.kurniawanc.com/api
    description: Production

paths:
  /movies:
    get:
      summary: Returns all movies.
      responses:
        "200":
          description: Get all movies response
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    example:
                      [
                        {
                          id: "123abc",
                          title: "movie name",
                          description: "some movie description",
                          picture_url: "link to picture url",
                          video_url: "link to movie video url",
                        },
                        {
                          id: "321bca",
                          title: "movie name",
                          description: "some movie description",
                          picture_url: "link to picture url",
                          video_url: "link to movie video url",
                        },
                        {
                          id: "132acb",
                          title: "movie name",
                          description: "some movie description",
                          picture_url: "link to picture url",
                          video_url: "link to movie video url",
                        },
                      ]
  /movies/{movieId}:
    get:
      summary: Returns single movie.
      parameters:
        - in: path
          name: movieId
          schema:
            type: string
            format: uuid
          required: true
          description: Movie id in UUID format
      responses:
        "200":
          description: Get single movie response
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    example:
                      {
                        id: "123abc",
                        title: "movie name",
                        description: "some movie description",
                        picture_url: "link to picture url",
                        video_url: "link to movie video url",
                      }
        "404":
          description: Movie not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie not found"
  /auth/register:
    post:
      summary: Register and create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username123
                  required: true
                  minLength: 6
                password:
                  type: string
                  example: 123456
                  required: true
                  minLength: 6
      responses:
        200:
          description: Register success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
        400:
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Username is required
        409:
          description: Conflict Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Username already exists
